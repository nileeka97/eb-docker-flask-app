name: Dev CD
env:
  # TODO: Configure the following environment variables
  EB_PACKAGE_S3_BUCKET_NAME : "docker-test-app-s3-deployments"
  EB_APPLICATION_NAME       : "docker-test-app"
  EB_ENVIRONMENT_NAME       : "docker-test-app-env"
  DEPLOY_PACKAGE_NAME       : "Dockerrun.aws.json"
  AWS_REGION_NAME           : "ap-south-1"
  ECR_REPOSITORY            : "docker-test-app"

on: 
  push:
    branches: 
      - ecr-image-deployment

jobs:

  push_to_ecr:
    runs-on: ubuntu-latest

    steps:
      - name: Git clone our  repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEPLOYMENTUSER_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.DEPLOYMENTUSER_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        working-directory: .
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and push it to ECR
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
    
      - name: Update Dockerrun.aws.json
        run: |
          jq '.Image.Name = "${{ steps.build-image.outputs.image }}"' Dockerrun.aws.json > tmp.json
          mv tmp.json Dockerrun.aws.json
           
      - name: Copy Dockerrun.aws.json file to S3 bucket
        run : aws s3 cp Dockerrun.aws.json s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME}}/

  deploy_to_eb:
    runs-on: ubuntu-latest
    needs: [push_to_ecr]

    steps:
      - name: Configure my AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    : ${{ secrets.DEPLOYMENTUSER_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.DEPLOYMENTUSER_SECRET_KEY }}
          aws-region           : ${{ env.AWS_REGION_NAME }}
      
      - name: Create new ElasticBeanstalk Applicaiton Version
        run : |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "Ver-${{ github.sha }}" \
          --description "CommitSHA-${{ github.sha }}" \
          --process

      - name: Deploy our new Application Version
        run : aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{ github.sha }}"
        
      - name: Print nice message on completion of CD Pipeline
        run : echo "Deploment finished successfully" 
