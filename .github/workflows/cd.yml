name: Dev CD
env:
  EB_PACKAGE_S3_BUCKET_NAME: "docker-test-app-s3-deployments"
  EB_APPLICATION_NAME: "docker-test-app"
  EB_ENVIRONMENT_NAME: "docker-test-app-env"
  DEPLOY_PACKAGE_NAME: "Dockerrun.aws.json"
  AWS_REGION_NAME: "ap-south-1"
  ECR_REPOSITORY: "docker-test-app"

on: 
  push:
    branches: 
      - ecr-image-deployment

jobs:

  build-and-push-to-ecr:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.build-image.outputs.image }}

    steps:
      - name: Git clone our repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEPLOYMENTUSER_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.DEPLOYMENTUSER_SECRET_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        working-directory: .
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and push it to ECR
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          echo "Image URL: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Update Dockerrun.aws.json
        run: |
          IMAGE_NAME="${{ steps.build-image.outputs.image }}"
          echo "Updating Dockerrun.aws.json with IMAGE_NAME: $IMAGE_NAME"
          jq --arg image "$IMAGE_NAME" '.Image.Name = $image' Dockerrun.aws.json > tmp.json
          mv tmp.json Dockerrun.aws.json
          
      - name: Verify Dockerrun.aws.json
        run: cat Dockerrun.aws.json

      - name: Copy Dockerrun.aws.json file to S3 bucket
        run: |
          aws s3 cp Dockerrun.aws.json s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DEPLOYMENTUSER_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEPLOYMENTUSER_SECRET_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_REGION_NAME }}

  update-and-push-dockerrun:
    runs-on: ubuntu-latest
    needs: build-and-push-to-ecr

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Update Dockerrun.aws.json
        run: |
          IMAGE_NAME="${{ needs.build-and-push-to-ecr.outputs.image }}"
          echo "Updating Dockerrun.aws.json with IMAGE_NAME: $IMAGE_NAME"
          jq --arg image "$IMAGE_NAME" '.Image.Name = $image' Dockerrun.aws.json > tmp.json
          mv tmp.json Dockerrun.aws.json

      - name: Verify Dockerrun.aws.json
        run: cat Dockerrun.aws.json
